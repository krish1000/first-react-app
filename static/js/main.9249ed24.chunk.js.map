{"version":3,"sources":["Components/Home.js","Components/About.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Home","About","Contact","App","className","src","alt","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wQAUaA,EAAO,kBAClB,6BACE,0CACA,yDCXSC,EAAQ,kBACnB,6BACE,2CACA,kECHSC,EAAU,kBACrB,6BACE,6CACA,sDCqCWC,MAlCf,WACE,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,OACb,4BAAQA,UAAU,cAChB,yBACEC,IAAI,kCACJD,UAAU,WACVE,IAAI,SAEN,2DAC+B,6CAD/B,4BAOJ,yBAAKF,UAAU,SAIb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,KAAK,IAAIC,OAAK,EAACC,UAAWT,IACjC,kBAAC,IAAD,CAAOO,KAAK,SAASE,UAAWR,IAChC,kBAAC,IAAD,CAAOM,KAAK,WAAWE,UAAWP,IAClC,kBAAC,IAAD,CAAOO,UAAW,kBAAM,2DCrBdC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCPNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9249ed24.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// export default function Home() {\r\n//     return (\r\n//         <div>\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport const Home = () => (\r\n  <div>\r\n    <h1> Home page</h1>\r\n    <p> Updated with PUBLIC_URL</p>\r\n  </div>\r\n);\r\n//using the curve bracket tricks it into thinking everything inside is in 1 return statement, so no need to use the above commented out code\r\n","import React from \"react\";\r\n\r\nexport const About = () => (\r\n  <div>\r\n    <h2> About page</h2>\r\n    <p> very epic this is the about page</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Contact = () => (\r\n  <div>\r\n    <h2> Contact page</h2>\r\n    <p> tele: 123-123-(1234)</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./Components/Home\";\nimport { About } from \"./Components/About\";\nimport { Contact } from \"./Components/Contact\"; //add the curly brackets around home, about, contact b/c there is no default export stated\n\nfunction App() {\n  return (\n    <div className=\"border1\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img\n            src=\"https://i.imgur.com/6Nn4ucD.gif\"\n            className=\"App-logo\"\n            alt=\"logo\"\n          />\n          <p>\n            Learning 2 deploy on ghpages <code>using react</code> DOES IT SPIN\n            REEEEEE.\n          </p>\n        </header>\n      </div>\n\n      <div className=\"blank\">\n        {\n          //<React.Fragment>\n        }\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route component={() => <div>404 Not found reeee</div>} />\n        </Switch>\n        {\n          //</React.Fragment>\n        }\n      </div>\n    </div>\n  );\n}\nexport default App;\n\n/* ORIGINAL\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> }\n        {/* This is a comment, checking out jsx comments }\n        <img\n          src=\"https://i.imgur.com/6Nn4ucD.gif\"\n          className=\"App-logo\"\n          alt=\"logo\"\n        />\n        <p>\n          Edit <code>src/yawyeeet.js</code> and save poop very epic.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\"; //BrowserRouter does not work with Github pages\n\n/* <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router> */\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}